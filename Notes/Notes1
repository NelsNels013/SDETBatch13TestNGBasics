TestNG

1) What is an XML?
     XML is a file format just like text, json, HTML, etc..

<project>
     <message>"Hello world"</message>
</project>

an example for json:

{
    "project":"project1",
    "message":"Hello world"
}

a text file:

the project is project1 and the message is "Hello World"

POM.xml:

<project>
<version> </version>

      <dependencies>


      </dependencies>


</project>

-----------------------------------------------
testNG:
Test is a tool,
it can be used to unit test, integration test, etc..

Annotations:

1) Test:
All the test cases must be written down under the annotation of @Test.

Whenever you run a class, it is going to execute each and every method under the annotation of @Test.

By default @Test annotation folios alphabetical order of execution of the test cases

e.g public void aTestCase(); --> will execute first
    public void bTestCase(); --> will execute second

    the green tick indicates that the test has passed
    the red sign indicates the test has failed

@Beforehand

the code under this annotation is going to execute everytime before each and every @Test execution is made.

@AfterMethod annotation:

the code under this annotation is going to execute after every test Method(after every @Test)
---------------------------------------------------------------------

1) What is a maven project and how does it differ from a java project?

--> Maven project we don't need jars
instead of that
--> We have a pom.xml in which we paste the dependencies that are needed.

2) How do we get those dependencies?
--> We have a maven repo and we get all the dependencies from there

3) What is a maven repo?
--> It is an online storage which has all the dependencies that can be used with a maven project.

4) What kind of dependencies you need for working with a testng and selenium project in maven?
--> Selenium
--> testNG
--> WebDriverManager
--> JCommander

5) How do you place your dependencies in POM.xml?
<dependencies>
     <dependency>
            <groupid>org.selenium2.selenium</groupid>
                 <artifact-id>selenium-java</artifact>
            <version>4</version>
     </dependency>
</dependencies>

6) We have different annotations?
@Test:
every test case is going to come under this annotation

@BeforeMethod:
It executes before each test annotation

@AfterMethod:
It executes after each test annotation

to write our
pre-conditions
and
post-conditions


